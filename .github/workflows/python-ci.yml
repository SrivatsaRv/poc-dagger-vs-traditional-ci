# name: Python CI with Docker and Semver

# on:
#   push:
#     branches:
#       - main
#     paths:
#       - '**'
#   pull_request:
#     branches:
#       - main
#     paths:
#       - '**'
#   workflow_dispatch:  # Allows manual triggering of the workflow

# permissions:
#   contents: write

# jobs:
#   build-and-test:
#     runs-on: ubuntu-latest

#     env:
#       DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
#       DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

#     steps:
#       # 1. Checkout the code
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       # 2. Set up Python environment
#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: 3.x

#       # 3. Log in to Docker Hub
#       - name: Log in to Docker Hub
#         run: make docker-login
#         working-directory: python-app
#         env:
#           DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
#           DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

#       # 4. Install dependencies
#       - name: Install dependencies
#         working-directory: python-app
#         run: make requirements

#       # 5. Run tests
#       - name: Run tests
#         working-directory: python-app
#         run: make test

#       # 6. Lint code
#       - name: Lint code
#         working-directory: python-app
#         run: make lint

#       # 7. Build Docker image
#       - name: Build Docker image
#         working-directory: python-app
#         run: make docker-build

#       # 8. Push Docker image
#       - name: Push Docker image
#         working-directory: python-app
#         run: make docker-push

#       # 9. Update image tag in deployment.yml
#       - name: Update image tag in deployment.yml
#         run: |
#           TAG=$(grep '^TAG' python-app/Makefile | cut -d '=' -f 2 | tr -d ' ')
#           yq -i '.spec.template.spec.containers[0].image = "docker.io/srivatsarv21/docker-dagger-poc:" + env(TAG)' infrastructure/deployment.yml

#           # Print the updated deployment.yml for debugging
#           echo "Updated contents of deployment.yml:"
#           cat infrastructure/deployment.yml
#         env:
#           TAG: ${{ env.TAG }}

#       # 10. Commit and push the updated deployment.yml
#       - name: Commit and push updated deployment.yml
#         run: |
#           git config --local user.email "srivatsa.rv@one2n.in"
#           git config --local user.name "srivatsa.rv"
#           git add infrastructure/deployment.yml
#           git commit -m "Update deployment.yml with image tag $(grep '^TAG' python-app/Makefile | cut -d '=' -f 2 | tr -d ' ')"
#           git push origin main
